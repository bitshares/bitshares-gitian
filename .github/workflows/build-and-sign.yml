on: deployment
env:
  USE_DOCKER: 1
jobs:
  prepare-bionic:
    name: Prepare "bionic" Gitian build environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-bioni
    - name: Prepare
      run: |
        if [ ! -r docker/base-bionic-amd64.tar.xz ]; then
            echo "Argh - caching only works for push and pull events. See https://github.com/actions/cache/issues/63"
            #vendor/gitian-builder/bin/make-base-vm --docker --suite bionic
            #docker save base-bionic-amd64 | xz >docker/base-bionic-amd64.tar.xz
        fi
  prepare-xenial:
    name: Prepare "xenial" Gitian build environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-xenia
    - name: Prepare
      run: |
        if [ ! -r docker/base-xenial-amd64.tar.xz ]; then
            echo "Argh - caching only works for push and pull events. See https://github.com/actions/cache/issues/63"
            #vendor/gitian-builder/bin/make-base-vm --docker --suite xenial
            #docker save base-xenial-amd64 | xz >docker/base-xenial-amd64.tar.xz
        fi
  linux:
    name: Build and sign linux binaries
    needs: prepare-xenial
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-linux
        key: build-cache-linux-${{ github.event.deployment.payload.coreversion }}
        restore-keys: |
          build-cache-linux-
    - name: Prepare
      run: |
        if [ ! -r docker/base-xenial-amd64.tar.xz ]; then
            echo "Argh - caching only works for push and pull events. See https://github.com/actions/cache/issues/63"
            vendor/gitian-builder/bin/make-base-vm --docker --suite xenial
        fi
    - name: Build and Sign
      run: |
        #docker load -i docker/base-xenial-amd64.tar.xz
        sudo apt-get install ruby
        export GNUPGHOME=`pwd`/.gpghome
        ./run-gitian -b -O linux \
                     ${{ github.event.deployment.payload.coreversion }} \
                     -j 1 \
          || ( echo Install log: && cat vendor/gitian-builder/var/install.log \
               && echo Build log: && cat vendor/gitian-builder/var/build.log \
               && false )
        PGP_PASS="${{ secrets.PGP_PASSPHRASE }}" \
          ./run-gitian -s BitShares-Gitian-Auto-Build-Signer \
                       -O linux -p `pwd`/.github/gpg-wrapper \
                       ${{ github.event.deployment.payload.coreversion }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Linux-Binaries
        path: vendor/gitian-builder/build/out
  mac:
    name: Build and sign mac binaries
    needs: prepare-bionic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-bionic
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-osx
        key: build-cache-osx-${{ github.event.deployment.payload.coreversion }}
        restore-keys: |
          build-cache-osx-
    - name: Prepare
      run: |
        if [ ! -r docker/base-bionic-amd64.tar.xz ]; then
            echo "Argh - caching only works for push and pull events. See https://github.com/actions/cache/issues/63"
            #vendor/gitian-builder/bin/make-base-vm --docker --suite bionic
        fi
    - name: Build and Sign
      run: |
        #docker load -i docker/base-bionic-amd64.tar.xz
        sudo apt-get install ruby
        echo "Skipping Mac build due to missing SDK"
        #./run-gitian -b -O osx \
        #             ${{ github.event.deployment.payload.coreversion }} \
        #             -j 1 \
        #  || ( echo Install log: && cat vendor/gitian-builder/var/install.log \
        #       && echo Build log: && cat vendor/gitian-builder/var/build.log \
        #       && false )
        export GNUPGHOME=`pwd`/.gpghome
        #PGP_PASS="${{ secrets.PGP_PASSPHRASE }}" \
        #  ./run-gitian -s BitShares-Gitian-Auto-Build-Signer \
        #               -O osx -p `pwd`/.github/gpg-wrapper \
        #               ${{ github.event.deployment.payload.coreversion }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Mac Binaries
        path: vendor/gitian-builder/build/out
  windows:
    name: Build and sign windows binaries
    needs: prepare-bionic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-win
        key: build-cache-win-${{ github.event.deployment.payload.coreversion }}
        restore-keys: |
          build-cache-win-
    - name: Prepare
      run: |
        if [ ! -r docker/base-bionic-amd64.tar.xz ]; then
            echo "Argh - caching only works for push and pull events. See https://github.com/actions/cache/issues/63"
            vendor/gitian-builder/bin/make-base-vm --docker --suite bionic
        fi
    - name: Build and Sign
      run: |
        #docker load -i docker/base-bionic-amd64.tar.xz
        sudo apt-get install ruby
        ./run-gitian -b -O win \
                     ${{ github.event.deployment.payload.coreversion }} \
                     -j 1 \
          || ( echo Install log: && cat vendor/gitian-builder/var/install.log \
               && echo Build log: && cat vendor/gitian-builder/var/build.log \
               && false )
        export GNUPGHOME=`pwd`/.gpghome
        PGP_PASS="${{ secrets.PGP_PASSPHRASE }}" \
          ./run-gitian -s BitShares-Gitian-Auto-Build-Signer \
                       -O win -p `pwd`/.github/gpg-wrapper \
                       ${{ github.event.deployment.payload.coreversion }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Windows Binaries
        path: vendor/gitian-builder/build/out
