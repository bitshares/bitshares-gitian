on: deployment
env:
  USE_DOCKER: 1
jobs:
  prepare-bionic:
    name: Prepare "bionic" Gitian build environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-bionic
    - name: Prepare
      run: |
        if [ ! -r docker/base-bionic-amd64.tar.xz ]; then
            vendor/gitian-builder/bin/make-base-vm --docker --suite bionic
            docker save base-bionic-amd64 | xz >docker/base-bionic-amd64.tar.xz
        fi
  prepare-xenial:
    name: Prepare "xenial" Gitian build environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-xenial
    - name: Prepare
      run: |
        if [ ! -r docker/base-xenial-amd64.tar.xz ]; then
            vendor/gitian-builder/bin/make-base-vm --docker --suite xenial
            docker save base-xenial-amd64 | xz >docker/base-xenial-amd64.tar.xz
        fi
  linux:
    name: Build and sign linux binaries
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-bionic
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-linux
        key: build-cache-linux
    - name: Build and Sign
      run: |
        docker load -i docker/base-bionic-amd64.tar.xz
        sudo apt-get install ruby
        export GNUPGHOME=`pwd`/.gpghome
        echo ${{ secrets.PGP_PASSPHRASE }} 1>&3 \
          | ./run-gitian -b -s BitShares-Gitian-Auto-Build-Signer \
                         -O linux -p "gpg --passphrase-fd 3" \
                         ${{ github.event.coreversion }} \
                         -j 1
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Linux-Binaries
        path: vendor/gitian-builder/build/out
  mac:
    name: Build and sign mac binaries
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-xenial
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-osx
        key: build-cache-osx
    - name: Build and Sign
      run: |
        docker load -i docker/base-xenial-amd64.tar.xz
        sudo apt-get install ruby
        export GNUPGHOME=`pwd`/.gpghome
        echo ${{ secrets.PGP_PASSPHRASE }} 1>&3 \
          | ./run-gitian -b -s BitShares-Gitian-Auto-Build-Signer \
                         -O osx -p "gpg --passphrase-fd 3" \
                         ${{ github.event.coreversion }} \
                         -j 1
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Mac Binaries
        path: vendor/gitian-builder/build/out
  windows:
    name: Build and sign windows binaries
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Load Prep Cache
      uses: actions/cache@v1
      with:
        path: docker
        key: prep-cache-xenial
    - name: Load Build Cache
      uses: actions/cache@v1
      with:
        path: vendor/gitian-builder/cache/bitshares-core-win
        key: build-cache-win
    - name: Build and Sign
      run: |
        docker load -i docker/base-xenial-amd64.tar.xz
        sudo apt-get install ruby
        export GNUPGHOME=`pwd`/.gpghome
        echo ${{ secrets.PGP_PASSPHRASE }} 1>&3 \
          | ./run-gitian -b -s BitShares-Gitian-Auto-Build-Signer \
                         -O win -p "gpg --passphrase-fd 3" \
                         ${{ github.event.coreversion }} \
                         -j 1
    - name: Upload build artifacts
      uses: actions/upload-artifact@master
      with:
        name: Windows Binaries
        path: vendor/gitian-builder/build/out
